apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "hive-metastore.fullname" . }}-db-init-schema
spec:
  template:
    spec:
      initContainers:
        - name: check-postgresql
          image: "ncsa/checks:1.0.0"
          env:
            - name: PGURI
              value: "postgresql://{{- tpl .Values.connections.database.host . }}:{{- .Values.connections.database.port }}/{{- .Values.connections.database.database }}"
            - name: PGUSER
              value: "$DATABASE_USER"
            - name: PGPASSWORD
              value: "$DATABASE_PASSWORD"
            - name: PGTABLE
              value: "users"
      containers:
      - name: hivemeta
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        command: ["/bin/sh", "-c"]
        args:
          - |
            if schematool -dbType postgres -validate -userName "$DATABASE_USER" -passWord "$DATABASE_PASSWORD" -url "jdbc:postgresql://{{- tpl .Values.connections.database.host . }}:{{- .Values.connections.database.port }}/{{- .Values.connections.database.database }}" | grep 'Done with metastore validation' | grep '[SUCCESS]'; then
              echo "Database OK"
            else
              echo "Validation failed, initializing schema..."
              schematool \
                --verbose \
                -initSchema \
                -dbType postgres \
                -userName "$DATABASE_USER" \
                -passWord "$DATABASE_PASSWORD" \
                -url "jdbc:postgresql://{{- tpl .Values.connections.database.host . }}:{{- .Values.connections.database.port }}/{{- .Values.connections.database.database }}"
            fi
        volumeMounts:
        - name: hive-config
          mountPath: /opt/hive-metastore/conf
        env:
          {{- if .Values.extraEnvVars }}
          {{- .Values.extraEnvVars | nindent 10 }}
          {{- end }}
          {{- if .Values.connections.database.existingSecret.name }}
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Values.connections.database.existingSecret.name }}
                key: {{ .Values.connections.database.existingSecret.usernameKey }}
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.connections.database.existingSecret.name }}
                key: {{ .Values.connections.database.existingSecret.passwordKey }}
          {{- else }}
          - name: DATABASE_USER
            value: "{{- .Values.connections.database.username }}"
          {{- end }}
        {{- if .Values.extraEnvVarsSecret }}
        envFrom:
          {{- if .Values.extraEnvVarsSecret }}
          - secretRef:
              name: "{{- .Values.extraEnvVarsSecret }}"
          {{- end }}
        {{- end }}
      volumes:
      - name: hive-config
        configMap:
          name: {{ include "hive-metastore.fullname" . }}


      restartPolicy: Never
  backoffLimit: 3
